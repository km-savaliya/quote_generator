{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","quote","setQuote","author","setAuthor","quoteApi","a","quoteArray","axios","get","data","console","log","content","error","useEffect","className","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAiDeA,EAxCH,WAEV,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAQ,uCAAG,8BAAAC,EAAA,6DACXC,EAAa,GADF,kBAGMC,IAAMC,IAAI,kCAHhB,OAGPC,EAHO,OAKbH,EAAaG,EAAKA,KAClBC,QAAQC,IAAIL,GANC,gDAQbI,QAAQC,IAAR,MARa,QAWf,IACEV,EAASK,EAAWM,SACpBT,EAAUG,EAAWJ,QACrB,MAAOW,GACPH,QAAQC,IAAIE,GAfC,yDAAH,qDAsBd,OAHAC,qBAAU,WACRV,MACA,IAEA,qBAAKW,UAAU,MAAf,SACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,SAAd,SAAwBb,IACxB,qBAAIa,UAAU,QAAd,cAAwBf,EAAxB,OACA,wBAAQe,UAAU,cAAcC,QAASZ,EAAzC,6BC9BKa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b260b8a4.chunk.js","sourcesContent":["import React,{ useEffect,useState } from 'react'\nimport './App.css';\nimport './Quote.css'\nimport axios from 'axios'\n\n\n\n\n\nconst App = ()=>{\n  \n  const [quote,setQuote] = useState(\"\")\n  const [author,setAuthor] = useState(\"\")\n\n  const quoteApi = async ()=>{\n    let quoteArray = []\n    try{\n      const data = await axios.get(\"https://api.quotable.io/random\")\n     \n      quoteArray = data.data\n      console.log(quoteArray)\n    }catch(error){  \n      console.log(error)\n    }\n\n    try {\n      setQuote(quoteArray.content)\n      setAuthor(quoteArray.author)      \n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(()=>{\n    quoteApi()\n  },[])\n  return (\n    <div className=\"App\">\n      <div className=\"quotebox\" >\n        <div className=\"quotecontainer\">\n          <h5 className=\"author\">{author}</h5>\n          <h3 className=\"quote\">\"{quote}\"</h3>\n          <button className=\"quotebutton\" onClick={quoteApi}>Another</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}